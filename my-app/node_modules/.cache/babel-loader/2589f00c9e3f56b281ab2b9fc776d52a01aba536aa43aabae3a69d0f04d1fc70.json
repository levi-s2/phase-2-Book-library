{"ast":null,"code":"var _jsxFileName = \"/home/levi/Development/code/phase-2/phase-2-Book-library/my-app/src/Request.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useOutletContext } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Request() {\n  _s();\n  const {\n    handleAddItem\n  } = useOutletContext();\n\n  //all state variables used to make the controlled form input\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n\n  //creates a new obj using state variables as the value to the corresponding keys\n  function handleSubmit(e) {\n    e.preventDefault();\n    const itemData = {\n      name: title,\n      author: author,\n      imgUrl: image\n    };\n    fetch(\"http://localhost:3000/popularBooks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(itemData)\n    }).then(r => r.json()).then(newItem => handleAddItem(newItem));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"white\"\n      },\n      children: \"Request a Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"NewItem\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Book Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Book Author\",\n        value: author,\n        onChange: e => setAuthor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"image URL(optional)\",\n        value: image,\n        onChange: e => setImage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n}\n_s(Request, \"NKU+MtH1XQ5IyWvjekFTj1yIcB8=\", false, function () {\n  return [useOutletContext];\n});\n_c = Request;\nexport default Request;\nvar _c;\n$RefreshReg$(_c, \"Request\");","map":{"version":3,"names":["React","useState","useOutletContext","Button","jsxDEV","_jsxDEV","Request","_s","handleAddItem","title","setTitle","author","setAuthor","image","setImage","handleSubmit","e","preventDefault","itemData","name","imgUrl","fetch","method","headers","body","JSON","stringify","then","r","json","newItem","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/levi/Development/code/phase-2/phase-2-Book-library/my-app/src/Request.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useOutletContext } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Button from 'react-bootstrap/Button'\n\n\nfunction Request() {\n  const {handleAddItem} = useOutletContext()\n\n  //all state variables used to make the controlled form input\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n\n  //creates a new obj using state variables as the value to the corresponding keys\n  function handleSubmit(e) {\n      e.preventDefault();\n      const itemData = {\n          name: title,\n          author: author,\n          imgUrl: image\n      }\n\n\n      fetch(\"http://localhost:3000/popularBooks\", {\n          method: \"POST\",\n          headers: {\n              \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(itemData),\n      })\n      .then(r => r.json())\n      .then(newItem => handleAddItem(newItem))\n    }\n\n    return (\n      <div>\n        <h1 style={{ color: \"white\"}}>Request a Book</h1>\n      <form className=\"NewItem\" onSubmit={handleSubmit}>\n              <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Book Title\"\n            value={title}\n            onChange={e => setTitle(e.target.value)}\n            />\n            <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Book Author\"\n            value={author}\n            onChange={e => setAuthor(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"image URL(optional)\"\n            value={image}\n            onChange={e => setImage(e.target.value)}\n          />\n          <Button type=\"submit\">submit</Button>\n              </form>\n          </div>\n    );\n    }\n\n  export default Request;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}